/**
 * Definition for singly-linked list.
 * class ListNode {
 *     public int val;
 *     public ListNode next;
 *     ListNode(int x) { val = x; next = null; }
 * }
 */
public class Solution {
	public ListNode detectCycle(ListNode a) {
	    
	    //first detect cycle
	    
	    ListNode slow =a;
	    ListNode fast = a;
	    
	    do
	    {
	        slow = slow.next;
	        fast = fast.next.next;
	    }while(fast!=null&&fast.next!=null&&slow!=fast);
	    
	    if(fast==null||fast.next==null){
	        return null;
	    }
	    slow = a;
	    
	    while(fast!=slow){
	        fast = fast.next;
	        slow = slow.next;
	    }
	    return fast;
	}
}
