public class Solution {
	public ArrayList<Integer> findSubstring(String a, final List<String> b) {
	   
	   ArrayList<Integer> res = new ArrayList();
	   
	    HashMap<String,Integer>h = new HashMap<String,Integer>();
	    for(String w:b){
	       if(h.containsKey(w)){
	           h.put(w,h.get(w)+1);
	       }else{
	           h.put(w,1);
	       }
	    }
	    
	    int k = b.get(0).length();
	    int n = k*b.size();
	    for(int i=0;i<=a.length()-n;i++){
	        if(checkWords2(a.substring(i,i+n),h,k))
	        {
	            res.add(i);
	        }
	    }
	    
	    return res;
	    
	}
	
	
	
	boolean checkWords(String s, HashMap<String,Integer> ht , int K){
	    HashMap<String,Integer> h = ht;
	    for(int i=0;i<=s.length()-K;i+=K){
	        String w=s.substring(i,i+K);
	        if(!h.containsKey(w)){return false;}
	        else{
	           if(h.get(w)>1){h.put(w,h.get(w)-1);}else{
	               h.remove(w);
	           }
	        }
	    }
	    return h.isEmpty();
	}
	
	
		boolean checkWords2(String s, HashMap<String,Integer> ht , int K){
	    HashMap<String,Integer> h =new HashMap<String,Integer>();
	    h.putAll(ht);
	    for(int i=0;i<=s.length()-K;i+=K){
	        String w=s.substring(i,i+K);
	        if(!h.containsKey(w)){return false;}
	        else{
	           if(h.get(w)>1){h.put(w,h.get(w)-1);}else{
	               h.remove(w);
	           }
	        }
	    }
	    return h.isEmpty();
	}
}
